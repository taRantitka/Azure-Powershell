{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "sqlServerPrimaryName": {
        "type": "string",
        "metadata": {
          "description": "The name of the primary SQL Server."
        }
      },
      "sqlServerPrimaryAdminUsername": {
        "type": "string",
        "metadata": {
          "description": "The administrator username of the primary SQL Server."
        }
      },
      "sqlServerPrimaryAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The administrator password of the primary SQL Server."
        }
      },
      "sqlServerSecondaryName": {
        "type": "string",
        "metadata": {
          "description": "The name of the secondary SQL Server."
        }
      },
      "sqlServerSecondaryRegion": {
        "type": "string",
        "metadata": {
          "description": "The location of the secondary SQL Server."
        }
      },
      "sqlServerSecondaryAdminUsername": {
        "type": "string",
        "metadata": {
          "description": "The administrator username of the secondary SQL Server."
        }
      },
      "sqlServerSecondaryAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The administrator password of the secondary SQL Server."
        }
      },
      "sqlFailoverGroupName": {
        "type": "string",
        "metadata": {
          "description": "The name of the failover group."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "primaryElasticPoolName": {
        "type": "string",
        "metadata": {
          "description": "The Elastic Pool name."
        }
      },
      "secondaryElasticPoolName": {
        "type": "string",
        "metadata": {
          "description": "The Elastic Pool name."
        }
      },
      "edition": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Basic",
          "Standard",
          "Premium",
          "GP_Gen5",
          "BC_Gen5"
        ],
        "metadata": {
          "description": "The Elastic Pool edition."
        }
      },
      "capacity": {
        "type": "int",
        "metadata": {
          "description": "The Elastic Pool DTU or nomber of vcore."
        }
      },
      "databaseCapacityMin": {
        "type": "int",
        "defaultValue": 0,
        "metadata": {
          "description": "The Elastic Pool database capacity min."
        }
      },
      "databaseCapacityMax": {
        "type": "int",
        "metadata": {
          "description": "The Elastic Pool database capacity max."
        }
      }
    },
    "variables": {
      "sqlDatabaseName": "MyData",
      "sqlDatabaseServiceObjective": "Basic",
      "sqlDatabaseEdition": "Basic",
      "editionToSkuMap": {
        "Basic": {
          "family": null,
          "name": "BasicPool",
          "tier": "Basic"
        },
        "Standard": {
          "family": null,
          "name": "StandardPool",
          "tier": "Standard"
        },
        "Premium": {
          "family": null,
          "name": "PremiumPool",
          "tier": "Premium"
        },
        "GP_Gen5": {
          "family": "Gen5",
          "name": "GP_Gen5",
          "tier": "GeneralPurpose"
        },
        "BC_Gen5": {
          "family": "Gen5",
          "name": "BC_Gen5",
          "tier": "BusinessCritical"
        }
      },
      "skuName": "[variables('editionToSkuMap')[parameters('edition')].name]",
      "skuTier": "[variables('editionToSkuMap')[parameters('edition')].tier]",
      "skuFamily": "[variables('editionToSkuMap')[parameters('edition')].family]"
    },
    "resources": [
      {
        "type": "Microsoft.Sql/servers",
        "kind": "v12.0",
        "name": "[parameters('sqlServerPrimaryName')]",
        "apiVersion": "2020-02-02-preview",
        "location": "[parameters('location')]",
        "properties": {
          "administratorLogin": "[parameters('sqlServerPrimaryAdminUsername')]",
          "administratorLoginPassword": "[parameters('sqlServerPrimaryAdminPassword')]",
          "version": "12.0"
        },
        "resources": [
          {
            "apiVersion": "2020-02-02-preview",
            "type": "failoverGroups",
            "name": "[parameters('sqlFailoverGroupName')]",
            "properties": {
              "serverName": "[parameters('sqlServerPrimaryName')]",
              "partnerServers": [
                {
                  "id": "[resourceId('Microsoft.Sql/servers', parameters('sqlServerSecondaryName'))]"
                }
              ],
              "readWriteEndpoint": {
                "failoverPolicy": "Automatic",
                "failoverWithDataLossGracePeriodMinutes": 60
              },
              "readOnlyEndpoint": {
                "failoverPolicy": "Disabled"
              },
              "databases": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerPrimaryName'), variables('sqlDatabaseName'))]"
              ]
            },
            "dependsOn": [
              "[parameters('sqlServerPrimaryName')]",
              "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerPrimaryName'), variables('sqlDatabaseName'))]",
              "[resourceId('Microsoft.Sql/servers', parameters('sqlServerSecondaryName'))]"
            ]
          },
          {
            "name": "[variables('sqlDatabaseName')]",
            "type": "databases",
            "apiVersion": "2020-02-02-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[parameters('sqlServerPrimaryName')]"
            ],
            "properties": {
              "edition": "[variables('sqlDatabaseEdition')]",
              "requestedServiceObjectiveName": "[variables('sqlDatabaseServiceObjective')]"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Sql/servers",
        "kind": "v12.0",
        "name": "[parameters('sqlServerSecondaryName')]",
        "apiVersion": "2020-02-02-preview",
        "location": "[parameters('sqlServerSecondaryRegion')]",
        "properties": {
          "administratorLogin": "[parameters('sqlServerSecondaryAdminUsername')]",
          "administratorLoginPassword": "[parameters('sqlServerSecondaryAdminPassword')]",
          "version": "12.0",
          "databases": [
            "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerPrimaryName'), variables('sqlDatabaseName'))]"
          ]
        }
      },
      {
        "type": "Microsoft.Sql/servers/elasticPools",
        "apiVersion": "2020-02-02-preview",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers/', parameters('sqlServerPrimaryName'))]"
        ],
        "location": "[parameters('location')]",
        "name": "[concat(parameters('sqlServerPrimaryName'), '/', parameters('primaryElasticPoolName'))]",
        "sku": {
          "name": "[variables('skuName')]",
          "tier": "[variables('skuTier')]",
          "family": "[variables('skuFamily')]",
          "capacity": "[parameters('capacity')]"
        },
        "properties": {
          "perDatabaseSettings": {
            "minCapacity": "[parameters('databaseCapacityMin')]",
            "maxCapacity": "[parameters('databaseCapacityMax')]"
          }
        }
      },
      {
        "type": "Microsoft.Sql/servers/elasticPools",
        "apiVersion": "2020-02-02-preview",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers/', parameters('sqlServerSecondaryName'))]"
        ],
        "location": "[parameters('location')]",
        "name": "[concat(parameters('sqlServerSecondaryName'), '/', parameters('secondaryElasticPoolName'))]",
        "sku": {
          "name": "[variables('skuName')]",
          "tier": "[variables('skuTier')]",
          "family": "[variables('skuFamily')]",
          "capacity": "[parameters('capacity')]"
        },
        "properties": {
          "perDatabaseSettings": {
            "minCapacity": "[parameters('databaseCapacityMin')]",
            "maxCapacity": "[parameters('databaseCapacityMax')]"
          }
        }
      }
    ]
  }